import React, {useContext, useEffect, useState} from 'react'
import {Link, Redirect} from "react-router-dom";

import Banner from 'components/banner'
import {getNewMessagesCount, logoutApi} from "api";
import {ContextIsAuth} from "components/context";
import {ContextUserId} from "components/context";
import {ContextSound} from "components/context";
import closeSound from 'sounds/close-app.mp3'
import clickLinkSound from 'sounds/clickLink.mp3'
import useSound from "use-sound";

const Header = () => {
    const [isAuth, setIsAuth] = useContext(ContextIsAuth)
    const [userId, setUserId] = useContext(ContextUserId)
    const [newMessagesCount, setNewMessagesCount] = useState(0)
    const [isSound, setIsSound] = useContext(ContextSound)
    const [closeApp] = useSound(closeSound, {volume: 0.1})
    const [clickLinkApp] = useSound(clickLinkSound, {volume: 0.1})

    // console.log('isSound', isSound)
    // console.log('isAuth', isAuth)
    const userIsLogged = localStorage.getItem('userIsLogged')

    useEffect(async () => {
        if (userIsLogged === 'true' || isAuth) {
            try {
                const data = await getNewMessagesCount()
                setNewMessagesCount(data)
                console.log('countNewMessages', data)
            } catch (err) {
                console.log('Error ', err)
            }
        }
    }, [isAuth])

    useEffect(() => {
        const interval = setInterval(async () => {
            if (userIsLogged === 'true' || isAuth) {
                try {
                    const data = await getNewMessagesCount()
                    setNewMessagesCount(data)
                    console.log('dataCountMessages', data)
                } catch (err) {
                    console.log('Error ', err)
                }
            }
        }, 600000)
        return () => clearInterval(interval)
    }, [isAuth])

    const handleLogout = async () => {
        const data = await logoutApi()
        localStorage.removeItem("userIsLogged")
        localStorage.removeItem("userId")
        setIsAuth(false)
        setUserId(null)
        if (isSound) {
            closeApp()
        }
        return <Redirect to="/login"/>
    }

    useEffect(() => {
        if (!userId) {
            setUserId(localStorage.getItem("userId"))
        }
    }, [userId])

    return (
        <div>
            <nav className="navbar navbar-expand-lg navbar-light bg-light">
                <div className="col-md-2">
                    <Link
                        to="/"
                        className="navbar-brand"
                        style={{"fontFamily": "titillium web,sans-serif", "color": "#5cb85c"}}
                    >
                        Social Network
                    </Link>
                    <button className="navbar-toggler" type="button" data-bs-toggle="collapse"
                            data-bs-target="#navbarNav"
                            aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                        <span className="navbar-toggler-icon"/>
                    </button>
                </div>
                <div className="col-md-6">
                    <div className="collapse navbar-collapse" id="navbarNav">
                        <div className="navbar-nav"
                             style={{fontFamily: "titillium web,sans-serif", marginLeft: '60px'}}>
                            <Link to="/" className="nav-link"
                                  style={{"color": "#5cb85c", "margin": "0px 20px"}} onClick={isSound ? () => {
                                clickLinkApp()
                            } : null}>Home</Link>
                            <Link to="/users" className="nav-link"
                                  style={{"color": "#5cb85c", "margin": "0px 20px"}} onClick={isSound ? () => {
                                clickLinkApp()
                            } : null}>Users</Link>
                            <Link to="/chat" className="nav-link"
                                  style={{"color": "#5cb85c", "margin": "0px 20px"}} onClick={isSound ? () => {
                                clickLinkApp()
                            } : null}>Chat</Link>
                            <Link to="/dialogs" className="nav-link"
                                  style={{"color": "#5cb85c", "margin": "0px 20px"}} onClick={isSound ? () => {
                                clickLinkApp()
                            } : null}>Dialogs
                                {newMessagesCount > 0 &&
                                <span className="badge bg-secondary">{newMessagesCount}</span>
                                }
                            </Link>
                            <Link to="/todo" className="nav-link"
                                  style={{"color": "#5cb85c", "margin": "0px 20px"}} onClick={isSound ? () => {
                                clickLinkApp()
                            } : null}>TodoList</Link>
                        </div>
                    </div>
                </div>

                <div className="col-md-2" style={{paddingLeft: '20px'}}>
                    <input
                        type="checkbox"
                        className="form-check-input"
                        id="exampleCheck1"
                        checked={isSound}
                        onChange={e => setIsSound(e.target.checked)}
                    />
                    <label
                        className="form-check-label"
                        htmlFor="exampleCheck1"
                        style={{marginLeft: '5px', color: "#5cb85c"}}
                    >
                        {isSound ? 'on sounds' : 'off sounds'}
                    </label>
                </div>

                <div className="col-md-2">
                    <div className="collapse navbar-collapse">
                        {userId &&
                        < div className="navbar-nav"
                              style={{"fontFamily": "titillium web,sans-serif"}}>
                            <Link to={`/profile/${userId}`} className="nav-link"
                                  style={{"color": "#5cb85c"}} onClick={isSound ? () => {
                                clickLinkApp()
                            } : null}
                            >My profile</Link>
                        </div>
                        }
                        <div className="navbar-nav"
                             style={{"fontFamily": "titillium web,sans-serif"}}>
                            {isAuth || localStorage.getItem("userIsLogged") === "true"
                                ? <button className="btn btn-secondary" onClick={handleLogout}>Log out</button>
                                : <Link to="/login" className="nav-link">Log in</Link>
                            }
                        </div>
                    </div>
                </div>
            </nav>
            <Banner/>
        </div>
    )
}

export default Header
