import React, {useEffect, useState} from 'react'
import {Redirect} from "react-router";
import {getProfileApi, putProfileApi} from "api";
import Loader from "components/loader";

const ProfileEdit = ({match}) => {
    if (!localStorage.getItem("userIsLogged")) {
        return <Redirect to="/login"/>
    }
    const userId = match.params.userId
    const [data, setData] = useState({})
    const [isPut, setIsPut] = useState(false)
    const [isBlockedButton, setIsBlockedButton] = useState(false)

    const [fullName, setFullName] = useState('')
    const [aboutMe, setAboutMe] = useState('')
    const [lookingForAJob, setLookingForAJob] = useState(false)
    const [lookingForAJobDescription, setLookingForAJobDescription] = useState('')
    const [facebook, setFacebook] = useState('')
    const [website, setWebsite] = useState('')
    const [vk, setVk] = useState('')
    const [twitter, setTwitter] = useState('')
    const [instagram, setInstagram] = useState('')
    const [youtube, setYoutube] = useState('')
    const [github, setGithub] = useState('')
    const [mainLink, setMainLink] = useState('')
    const [error, setError] = useState([])

    // console.log('userID', userId)
    // console.log('dataUser', data)
    // console.log("name", fullName)
    // setUserId(localStorage.getItem("userId"))

    const handleSubmit = async (e) => {
        e.preventDefault()
        setIsBlockedButton(true)
        const options = {
            userId,
            aboutMe,
            lookingForAJob,
            lookingForAJobDescription,
            fullName,
            contacts: {
                github,
                vk,
                facebook,
                instagram,
                twitter,
                website,
                youtube,
                mainLink
            }
        }
        try {
            const dataResp = await putProfileApi(options)
            setIsPut(true)
            console.log('putDataResponse', dataResp)
            if (dataResp.resultCode !== 0) {
                setError(dataResp.messages)
                setIsPut(false)
            }
        } catch (err) {
            console.log("Error ", err)
        }
    }

    useEffect(async () => {
        const d = await getProfileApi(userId)
        setData(d)

        setFullName(d.fullName)
        setAboutMe(d.aboutMe)
        setLookingForAJob(d.lookingForAJob)
        setLookingForAJobDescription(d.lookingForAJobDescription)
        setFacebook(d.contacts.facebook)
        setWebsite(d.contacts.website)
        setVk(d.contacts.vk)
        setTwitter(d.contacts.twitter)
        setInstagram(d.contacts.instagram)
        setYoutube(d.contacts.youtube)
        setGithub(d.contacts.github)
        setMainLink(d.contacts.mainLink)
    }, [isPut])

    if (!data) {
        return <Loader/>
    }

    return (
        <>
            {data &&
            <div className="row justify-content-md-center">
                <div className="col-md-4 shadow p-3 mb-5 bg-body rounded" style={{"marginTop": "50px"}}>
                    {error &&
                    <ul>{error.map((message, index) => (
                        <li key={index} className="text-danger">{message}</li>
                    ))}
                    </ul>
                    }
                    <form onSubmit={handleSubmit}>
                        <div className="mb-3">
                            <label htmlFor="exampleInputPassword1" className="form-label">Name</label>
                            <input type="text" value={fullName || ''} onChange={e => {
                                setFullName(e.target.value)
                            }} className="form-control"/>
                        </div>
                        <div className="mb-3">
                            <label htmlFor="exampleInputEmail1" className="form-label">About me</label>
                            <textarea rows="5" value={aboutMe} onChange={e => {
                                setAboutMe(e.target.value)
                            }} className="form-control"/>
                        </div>
                        <div className="mb-3 form-check">
                            <input type="checkbox" checked={lookingForAJob} onChange={e => {
                                setLookingForAJob(e.target.checked)
                            }} className="form-check-input"/>
                            <label className="form-check-label" htmlFor="exampleCheck1">Looking for a job</label>
                        </div>
                        <div className="mb-3">
                            <label htmlFor="exampleInputEmail1" className="form-label">Looking for a job
                                description</label>
                            <textarea rows="5" value={lookingForAJobDescription}
                                      onChange={e => setLookingForAJobDescription(e.target.value)}
                                      className="form-control"/>
                        </div>
                        <h6>Contacts</h6>
                        <div className="mb-3">
                            <label htmlFor="exampleInputPassword1" className="form-label">facebook</label>
                            <input type="text" value={facebook || ''} onChange={e => {
                                setFacebook(e.target.value)
                            }} className="form-control"/>
                        </div>
                        <div className="mb-3">
                            <label htmlFor="exampleInputPassword1" className="form-label">website</label>
                            <input type="text" value={website || ''} onChange={e => {
                                setWebsite(e.target.value)
                            }} className="form-control"/>
                        </div>
                        <div className="mb-3">
                            <label htmlFor="exampleInputPassword1" className="form-label">vk</label>
                            <input type="text" value={vk || ''} onChange={e => {
                                setVk(e.target.value)
                            }} className="form-control"/>
                        </div>
                        <div className="mb-3">
                            <label htmlFor="exampleInputPassword1" className="form-label">twitter</label>
                            <input type="text" value={twitter || ''} onChange={e => {
                                setTwitter(e.target.value)
                            }} className="form-control"/>
                        </div>
                        <div className="mb-3">
                            <label htmlFor="exampleInputPassword1" className="form-label">instagram</label>
                            <input type="text" value={instagram || ''} onChange={e => {
                                setInstagram(e.target.value)
                            }} className="form-control"/>
                        </div>
                        <div className="mb-3">
                            <label htmlFor="exampleInputPassword1" className="form-label">youtube</label>
                            <input type="text" value={youtube || ''} onChange={e => {
                                setYoutube(e.target.value)
                            }} className="form-control"/>
                        </div>
                        <div className="mb-3">
                            <label htmlFor="exampleInputPassword1" className="form-label">github</label>
                            <input type="text" value={github || ''} onChange={e => {
                                setGithub(e.target.value)
                            }} className="form-control"/>
                        </div>
                        <div className="mb-3">
                            <label htmlFor="exampleInputPassword1" className="form-label">mainLink</label>
                            <input type="text" value={mainLink || ''} onChange={e => {
                                setMainLink(e.target.value)
                            }} className="form-control"/>
                        </div>
                        <button type="submit" className="btn btn-primary" disabled={isBlockedButton}>Submit</button>
                    </form>
                    {isPut && (<Redirect to={`/profile/${userId}`}/>)}
                </div>
            </div>
            }
        </>
    )
}

export default ProfileEdit