import React, {Fragment, useContext, useEffect, useState} from 'react'
import {Redirect} from "react-router"
import {Link} from "react-router-dom"

import {getProfileApi, getStatusApi, putProfileImage, putStatusApi} from "api";
import userImgDefault from "images/user.png"
import Loader from 'components/loader'
import {ContextUserId} from "components/context";
import classes from 'pages/profile/Profile.module.css'

const Profile = ({match}) => {
    if (!localStorage.getItem("userIsLogged")) {
        return <Redirect to="/login"/>
    }
    const userId = match.params.userId
    const [data, setData] = useState({})
    const [status, setStatus] = useState('')
    const [isUpdateStatus, setIsUpdateStatus] = useState(false)
    const [error, setError] = useState([])
    const [updateImage, setUpdateImage] = useState(false)
    const [myUserId, setMyUserId] = useContext(ContextUserId)
    // console.log('data', data)
    // console.log('dataPhotos', data.photos)
    // console.log('New status: ', newStatus)
    // console.log('myUserId', typeof myUserId)
    // console.log('userId', typeof userId)

    const onMainPhotoSelected = async (e) => {
        console.log('e.target.files: ', e.target.files[0])
        if (e.target.files?.length) {
            const imageFile = e.target.files[0]
            try {
                const dataImg = await putProfileImage(imageFile)
                if (dataImg.resultCode !== 0) {
                    setError(dataImg.messages)
                }
                setUpdateImage(true)
                // console.log('dataImg', dataImg)
            } catch (err) {
                console.log('Error ', err)
            }
        }
    }

    const handleStatus = () => {
        setIsUpdateStatus(true)
    }

    const handleBlur = async () => {
        const options = {
            status: status
        }
        try {
            const data = await putStatusApi(options)
            if (data.resultCode !== 0) {
                setError(data.messages)
            }
            setIsUpdateStatus(false)
        } catch (err) {
            console.log("Error: ", err)
        }
    }

    useEffect(async () => {
        const d = await getProfileApi(userId)
        setData(d)
        const statusTemp = await getStatusApi(userId)
        setStatus(statusTemp)
    }, [getProfileApi, userId, isUpdateStatus, updateImage])

    if (!data.photos) {
        return <Loader/>
    }

    return (
        <>
            {data &&
            <div className="row justify-content-md-center">
                <div className="card mb-3" style={{"maxWidth": "600px", "paddingLeft": "0"}}>
                    <div className="row g-0">
                        <div className="col-md-4">
                            < img src={data.photos.large !== null ? data.photos.large : userImgDefault} alt="..."
                                  style={{"width": "200px", "height": "auto", "marginBottom": "10px"}}/>
                            {error &&
                            <ul>
                                {error.map((message, index) => (
                                    <li key={index} className="text-danger">{message}</li>
                                ))}
                            </ul>
                            }
                            <div style={{"paddingLeft": "12px"}}>
                                <div><b>Status:</b></div>
                                {!isUpdateStatus
                                    ? <div onDoubleClick={handleStatus}>{status ? status :
                                        <p className="card-text text-danger">Status is not set</p>}</div>
                                    : <input className="form-control" type="text" value={status}
                                             onChange={e => setStatus(e.target.value)}
                                             autoFocus={true}
                                             onBlur={handleBlur}
                                    />
                                }
                            </div>
                        </div>
                        <div className="col-md-8">
                            <div className="card-body">
                                <h5 className="card-title">{data.fullName}</h5>
                                <p className="card-text"><small
                                    className="text-muted">id: {data.userId}</small></p>
                                <p className="card-text"><b>About
                                    me: </b> {data.aboutMe ? data.aboutMe : 'No information'}</p>
                                <p className="card-text"><b>Looking for a
                                    job: </b> {data.lookingForAJob ? 'Yes' : 'No'}</p>
                                <p className="card-text"><b>Looking for a job
                                    description: </b> {data.lookingForAJobDescription ? data.lookingForAJobDescription : 'No information'}
                                </p>
                                <p className="card-text"><b>Contacts:</b></p>
                                {data.contacts &&
                                Object.keys(data.contacts).map(key => {
                                    return <p key={key} className="card-text">
                                        <b>{key}: </b>{data.contacts[key] ? data.contacts[key] : 'No information'}
                                    </p>
                                })
                                }
                                {Number(userId) === Number(myUserId) &&
                                <Fragment>
                                    <Link to={`/edit/${userId}`} className="btn btn-primary">Edit profile</Link>
                                    <label className={classes.fileUpload}>
                                        <input className={classes.inputFile} type="file"
                                               onChange={onMainPhotoSelected}/>
                                        Change image
                                    </label>
                                </Fragment>
                                }
                                {Number(userId) !== Number(myUserId) &&
                                <Link
                                    to={`/dialogs/${userId}/messages`}
                                    className="btn btn-primary"
                                    style={{marginLeft: '5px'}}
                                >Dialog</Link>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            }
        </>
    )
}

export default Profile